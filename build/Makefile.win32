include build/Makefile.common

#
#   Win32 Shtuff
#
# This stuff needs to be set semi-manually on windows

export OS
C_COMPILER ?= gcc
export CC := $(C_COMPILER)
export RM := del /F
DEP_DIR ?= ../libs
export DEP_BIN_DIR ?= $(DEP_DIR)/bin
export DEP_INC_DIR ?= $(DEP_DIR)/include
export DEP_LIB_DIR ?= $(DEP_DIR)/lib
export DEP_SDL_INC_DIR ?= $(DEP_INC_DIR)/SDL
DEP_XML_INC_DIR ?= $(DEP_INC_DIR)/libxml2
DEP_TTF_INC_DIR ?= $(DEP_INC_DIR)/freetype2
export DEP_PNG_INC_DIR ?= $(DEP_INC_DIR)

#
#   CFLAGS
#
CLUA   := -Ilib/lua
CCSPARSE := -Ilib/csparse
CSDL   := -D_GNU_SOURCE=1 -Dmain=SDL_main -DGL_GLEXT_PROTOTYPES
CXML   :=
CTTF   :=
CPNG   :=
CGL    :=
CFLAGS += -D_GNU_SOURCE -Isrc
CFLAGS += -I$(DEP_INC_DIR)
CFLAGS += -I$(DEP_SDL_INC_DIR) -I$(DEP_XML_INC_DIR) -I$(DEP_TTF_INC_DIR) -I$(DEP_PNG_INC_DIR)
CFLAGS += $(CLUA) $(CCSPARSE) $(CSDL) $(CXML) $(CTTF) $(CPNG) $(CGL)
CFLAGS += $(VERSION) -D$(OS) $(CFLAGS_COMMON)

#
#   LDFLAGS
#
LDLUA   := lib/lua/liblua.a
LDCSPARSE := lib/csparse/libcsparse.a
LDSDL   := -lSDL -lSDLmain -lSDL_image -lSDL_mixer
LDXML   := -llibxml2 -lz -liconv -lwsock32
LDTTF   := -lfreetype -lz -lintl -lwsock32 -lole32 -luuid -lmsvcp60
LDPNG   := -lpng12
LDGL    := -lglu32 -lopengl32
LDFLAGS += -lmingw32 -mwindows -lm
LDFLAGS += -L$(DEP_BIN_DIR) -L$(DEP_LIB_DIR)
LDFLAGS += $(LDLUA) $(LDCSPARSE) $(LDSDL) $(LDXML) $(LDTTF) $(LDPNG) $(LDGL)

# Debug stuff
ifdef DEBUG
CFLAGS += -W -Wall -Wextra -Wunused -Wshadow -Wpointer-arith -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -g -DDEBUG -DLUA_USE_APICHECK -std=c99

ifdef DEBUG_PARANOID
CFLAGS += -DDEBUG_PARANOID
endif # DEBUG_PARANOID

else # DEBUG
CFLAGS += -O2 -pipe -ansi
endif # DEBUG

ifdef DEBUG
export DEBUG

ifdef DEBUG_PARANOID
export DEBUG_PARANOID

#
#   TARGETS
#
.PHONY: all help lua csparse utils docs clean distclean


%.o:	%.c %.h
	@$(CC) -c $(CFLAGS) -o $@ $<
	@echo "   CC   $@"


all:	utils ndata lua csparse naev


help:
	@echo "Possible targets are:":
	@echo "       lua - builds Lua support"
	@echo "   csparse - builds CSparse support"
	@echo "      naev - builds the naev binary"
	@echo "     mkpsr - builds the mkspr utilitily"
	@echo "     ndata - creates the ndata file"
	@echo "     utils - builds all the utilities"
	@echo "      docs - creates the doxygen documentation"
	@echo "     clean - removes naev's main binary and ndata file"
	@echo " distclean - removes everything done"


$(APPNAME): $(OBJS)
	@$(CC) $(LDFLAGS) -o $(APPNAME) $(OBJS) lib/lua/liblua.a lib/csparse/libcsparse.a
	@echo "   LD   $(APPNAME)"


lua: lib/lua/liblua.a


lib/lua/liblua.a:
	+@$(MAKE) -C lib/lua a


csparse: lib/csparse/libcsparse.a


lib/csparse/libcsparse.a:
	+@$(MAKE) -C lib/csparse


pack: src/md5.o src/pack.o utils/pack/main.o
	+@$(MAKE) -C utils/pack


mkspr: utils/mkspr/main.o
	+@$(MAKE) -C utils/mkspr


$(VERSIONFILE):
	@echo -n "$(VMAJOR).$(VMINOR).$(VREV)" > $(VERSIONFILE)


ndata: pack $(DATAFILES)
	@echo -n "$(VMAJOR).$(VMINOR).$(VREV)" > $(VERSIONFILE)
	@echo "   DAT  ndata"
	@./pack $(DATA) $(DATAFILES)


utils: pack mkspr


docs:
	@echo "The 'docs' target is not supported on this platform"


clean:
	@echo "   Removing ndata"
	@$(RM) $(DATA)
	@echo "   Removing object files"
	@$(RM) $(OBJS)
	@echo "   Removing main binary ($(APPNAME))"
	@$(RM) $(APPNAME)


distclean: clean
	@echo "   Cleaning utilities"
	@$(MAKE) -C utils/pack clean
	@$(MAKE) -C utils/mkspr clean
	@echo "   Cleaning Lua"
	@$(MAKE) -C lib/lua distclean
	@echo "   Cleaning CSparse"
	@$(MAKE) -C lib/csparse distclean
	@echo "   Removing build tool binaries"
	@$(RM) mkspr pack


